'use strict';
/*
 * Copyright (c) 2016, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root  or https://opensource.org/licenses/BSD-3-Clause
 */
const path = require('path');
const _ = require('lodash');
const projectDir = require(path.join(__dirname, 'projectDir'));
const logger = require(path.join(__dirname, 'logApi'));
/**
 * An array or command pre-filters functions that are passed the command
 * definition, the CLI context, and if the command is running in JSON
 * mode or not.
 */
module.exports = {
    validateProjectDir(command) {
        if (command.requiresProject) {
            projectDir.getPath();
        }
    },
    showDeprecationWarnings(command, context) {
        context.warnings = context.warnings || [];
        if (command.deprecated) {
            const msg = logger.formatDeprecationWarning(command.command, command.deprecated, 'command');
            logger.warnUser(context, msg);
        }
        else if (context.flags) {
            _.each(command.flags, flag => {
                if (flag.deprecated && !_.isNil(context.flags[flag.name])) {
                    const msg = logger.formatDeprecationWarning(flag.name, flag.deprecated, 'flag');
                    logger.warnUser(context, msg);
                }
            });
        }
    }
};

//# sourceMappingURL=indexPreFilters.js.map
