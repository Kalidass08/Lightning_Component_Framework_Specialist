"use strict";
/*
 * Copyright (c) 2016, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root  or https://opensource.org/licenses/BSD-3-Clause
 */
const path = require('path');
const almError = require(path.join(__dirname, 'almError'));
const keychain = require(path.join(__dirname, 'keyChain'));
const srcDevUtil = require(path.join(__dirname, 'srcDevUtil'));
module.exports = function (platform) {
    const useGenericUnixKeychain = srcDevUtil.useGenericUnixKeychain();
    if (/^win/.test(platform)) {
        return keychain.windows;
    }
    else if (/darwin/.test(platform)) {
        // OSX can use the generic keychain. This is useful when running under an
        // automation user.
        if (useGenericUnixKeychain) {
            return keychain.generic_unix;
        }
        else {
            return keychain.darwin;
        }
    }
    else if (/linux/.test(platform)) {
        // Use the generic keychain if specified
        if (useGenericUnixKeychain) {
            return keychain.generic_unix;
        }
        else {
            // otherwise try and use the builtin keychain
            try {
                keychain.linux.validateProgram();
                return keychain.linux;
            }
            catch (e) {
                // If the builtin keychain is not available use generic
                return keychain.generic_unix;
            }
        }
    }
    else {
        throw almError('UnsupportedOperatingSystem', [platform]);
    }
};

//# sourceMappingURL=keyChainImpl.js.map
